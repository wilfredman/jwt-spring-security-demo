buildscript {
    ext.spring_boot_version = '2.1.3.RELEASE'
    repositories {
        maven {
            url "https://artifactory.platform.manulife.io/artifactory/libs-release"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:$spring_boot_version")
        classpath("se.transmode.gradle:gradle-docker:1.2")
    }
}


plugins {
    id 'org.springframework.boot' version '2.1.3.RELEASE'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'docker'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'application'

group = 'com.manulife'
version = '0.0.1'

repositories {
    maven {
        url "https://artifactory.platform.manulife.io/artifactory/libs-release"
    }
    maven {
        url "https://artifactory.platform.manulife.io/artifactory/libs-snapshot"
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

ext {
    jacksonVersion = "1.9.13"
    jackson2Version = "2.3.2"
    bouncycastleVersion = "1.59"
    esperVersion = "5.3.0"
    tikaVersion = "1.11"
    httpcomponentsHttpclientVersion = "4.5.1"
    springIntegrationVersion = "4.2.2.RELEASE"
    springCloudVersion = 'Greenwich.SR1'
}


dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.webjars:jquery:3.3.1")
    compile("com.h2database:h2")

    compile 'org.springframework.cloud:spring-cloud-starter-oauth2'
    compile 'org.webjars:js-cookie:2.2.0'
    compile 'org.webjars:webjars-locator-core:0.37'
    
    compile 'com.googlecode.json-simple:json-simple:1.1.1'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    
    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'
    compile group: 'org.webjars', name: 'bootstrap', version: '4.3.1'
    compile group: 'com.auth0', name: 'java-jwt', version: '2.0.1'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'

    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'
    
    runtime("org.springframework.boot:spring-boot-devtools")
    
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.199'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile('org.springframework.security:spring-security-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

mainClassName = 'org.zerhusen.JwtDemoApplication'

bootJar {
    mainClassName = 'org.zerhusen.JwtDemoApplication'
}

jar {
    manifest {
        attributes(
                'Main-Class': JwtDemoApplication
        )
    }
}

task buildDocker(type: Docker, dependsOn: build) {
    applicationName = "myhttpd"
    dockerfile = file("src/main/docker/Dockerfile-apache")
    addFile {
        from jar
        rename { 'jwtdemo.jar' }
    }
    doFirst {
        copy {
            from jar
            into stageDir
        }
    }
}
